name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  CARGO_TERM_COLOR: always
  SOLANA_VERSION: '2.0.0'
  RUST_TOOLCHAIN: stable

jobs:
  lint-rust:
    name: Lint Rust Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          override: true
          components: rustfmt, clippy
      
      - name: Cache Cargo Registry
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Cache Cargo Index
        uses: actions/cache@v3
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Cache Cargo Build
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Run rustfmt
        run: cargo fmt --all -- --check
      
      - name: Run clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

  build-rust:
    name: Build Rust Program
    runs-on: ubuntu-latest
    needs: lint-rust
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          override: true
      
      - name: Cache Solana
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/solana/
            ~/.local/share/solana/
          key: ${{ runner.os }}-solana-${{ env.SOLANA_VERSION }}
      
      - name: Install Solana
        run: |
          sh -c "$(curl -sSfL https://release.solana.com/v${{ env.SOLANA_VERSION }}/install)"
          echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH
      
      - name: Cache Cargo Build
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Build BPF Program
        run: cargo build-bpf
      
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: solana-program
          path: target/deploy/*.so

  test-rust:
    name: Test Rust Program
    runs-on: ubuntu-latest
    needs: build-rust
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          override: true
      
      - name: Cache Solana
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/solana/
            ~/.local/share/solana/
          key: ${{ runner.os }}-solana-${{ env.SOLANA_VERSION }}
      
      - name: Install Solana
        run: |
          sh -c "$(curl -sSfL https://release.solana.com/v${{ env.SOLANA_VERSION }}/install)"
          echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH
      
      - name: Cache Cargo Test
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.os }}-cargo-test-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Run Tests
        run: cargo test-bpf

  lint-typescript:
    name: Lint TypeScript Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install Dependencies
        run: npm ci
      
      - name: Compile TypeScript
        run: npm run compile

  build-complete:
    name: Build Complete
    runs-on: ubuntu-latest
    needs: [test-rust, lint-typescript]
    steps:
      - name: Success
        run: echo "All checks passed successfully!"

